<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="kopo.poly.persistance.mapper.IUserInfoMapper">

    <!-- 회원 가입 전 아이디 중복체크 -->
    <!-- DECODE(COUNT(1),0,'N','Y') count(1)한 게[첫번째 column count] 0이면 'N'출력 아니면 'Y'출력 -->
    <select id="getUserIdExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT DECODE(COUNT(1),0,'N','Y') AS EXISTS_YN
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <!-- 회원 가입 전 이메일 중복체크하기-->
    <select id="getEmailExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT DECODE(COUNT(1),0,'N','Y') AS EXISTS_YN
        FROM USER_INFO
        WHERE EMAIL = #{email}
    </select>

    <!-- 회원 가입하기(회원 정보 등록하기) -->
    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USER_INFO
        (USER_ID,
         USER_NAME,
         PASSWORD,
         EMAIL,
         ADDR1,
         ADDR2,
         REG_ID,
         REG_DT,
         CHG_ID,
         CHG_DT)
        VALUES (#{userId},
                #{userName},
                #{password},
                #{email},
                #{addr1},
                #{addr2},
                #{userId},
                SYSDATE,
                #{userId},
                SYSDATE)

    </insert>

    <!-- 유저 리스트 쿼리 -->
    <select id="getUserList" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL, ADDR1, ADDR2, TO_DATE(REG_DT,'YYYY.MM.DD HH24:MI:SS') AS TIME
        FROM USER_INFO
        ORDER BY TIME DESC
    </select>

    <!-- 유저 상세보기 쿼리 -->
    <select id="getUserInfo" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL, ADDR1, ADDR2
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <!-- 로그인을 위해 아이디와 비밀번호가 일치하는지 확인하기 -->
    <select id="getLogin" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL, ADDR1, ADDR2
        FROM USER_INFO
        WHERE USER_ID = #{userId}
          AND PASSWORD = #{password}
    </select>

    <!-- 유저 상세보기 쿼리 -->
    <select id="getUserId" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USER_INFO
        WHERE 1 = 1
        <if test="userId neq null and userId neq '' "> <!-- 비밀번호 찾기라면, user_id 조회 추가 -->
            AND USER_ID = #{userId}
        </if>
        AND USER_NAME = #{userName}
        AND EMAIL = #{email}
    </select>

    <update id="updatePassword" parameterType="UserInfoDTO">
        UPDATE USER_INFO
        SET PASSWORD = #{password}
        WHERE USER_ID = #{userId}
    </update>

</mapper>